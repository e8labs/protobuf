// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datasets/google_message4/benchmark_message4_3.proto

#include "datasets/google_message4/benchmark_message4_3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace benchmarks {
namespace google_message4 {
}  // namespace google_message4
}  // namespace benchmarks
namespace protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto {
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[42];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "datasets/google_message4/benchmark_message4_3.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n3datasets/google_message4/benchmark_mes"
      "sage4_3.proto\022\032benchmarks.google_message"
      "4*<\n\nUnusedEnum\022\026\n\022UNUSED_ENUM_VALUE1\020\000\022"
      "\026\n\022UNUSED_ENUM_VALUE2\020\001*\252\001\n\010Enum2593\022\022\n\016"
      "ENUM_VALUE2594\020\000\022\022\n\016ENUM_VALUE2595\020\001\022\022\n\016"
      "ENUM_VALUE2596\020\002\022\022\n\016ENUM_VALUE2597\020\003\022\022\n\016"
      "ENUM_VALUE2598\020\004\022\022\n\016ENUM_VALUE2599\020\005\022\022\n\016"
      "ENUM_VALUE2600\020\006\022\022\n\016ENUM_VALUE2601\020\007*F\n\010"
      "Enum2834\022\022\n\016ENUM_VALUE2835\020\000\022\022\n\016ENUM_VAL"
      "UE2836\020\001\022\022\n\016ENUM_VALUE2837\020\002*\266\002\n\010Enum280"
      "6\022\022\n\016ENUM_VALUE2807\020\000\022\022\n\016ENUM_VALUE2808\020"
      "\001\022\022\n\016ENUM_VALUE2809\020\002\022\022\n\016ENUM_VALUE2810\020"
      "\003\022\022\n\016ENUM_VALUE2811\020\004\022\022\n\016ENUM_VALUE2812\020"
      "\005\022\022\n\016ENUM_VALUE2813\020\006\022\022\n\016ENUM_VALUE2814\020"
      "\007\022\022\n\016ENUM_VALUE2815\020\010\022\022\n\016ENUM_VALUE2816\020"
      "\t\022\022\n\016ENUM_VALUE2817\020\n\022\022\n\016ENUM_VALUE2818\020"
      "\013\022\022\n\016ENUM_VALUE2819\020\014\022\022\n\016ENUM_VALUE2820\020"
      "\r\022\022\n\016ENUM_VALUE2821\020\016*\202\023\n\010Enum2851\022\022\n\016EN"
      "UM_VALUE2852\020\000\022\022\n\016ENUM_VALUE2853\020\000\022\022\n\016EN"
      "UM_VALUE2854\020\001\022\022\n\016ENUM_VALUE2855\020\002\022\022\n\016EN"
      "UM_VALUE2856\020\003\022\022\n\016ENUM_VALUE2857\020\004\022\022\n\016EN"
      "UM_VALUE2858\020\005\022\022\n\016ENUM_VALUE2859\020\006\022\022\n\016EN"
      "UM_VALUE2860\020\007\022\022\n\016ENUM_VALUE2861\020\010\022\022\n\016EN"
      "UM_VALUE2862\020\t\022\022\n\016ENUM_VALUE2863\020\n\022\022\n\016EN"
      "UM_VALUE2864\020\013\022\022\n\016ENUM_VALUE2865\020\014\022\022\n\016EN"
      "UM_VALUE2866\020\r\022\022\n\016ENUM_VALUE2867\020\016\022\022\n\016EN"
      "UM_VALUE2868\020\017\022\022\n\016ENUM_VALUE2869\020\020\022\022\n\016EN"
      "UM_VALUE2870\020\021\022\022\n\016ENUM_VALUE2871\020\022\022\022\n\016EN"
      "UM_VALUE2872\020\023\022\022\n\016ENUM_VALUE2873\020\024\022\022\n\016EN"
      "UM_VALUE2874\020\025\022\022\n\016ENUM_VALUE2875\020\026\022\022\n\016EN"
      "UM_VALUE2876\020\027\022\022\n\016ENUM_VALUE2877\020\030\022\022\n\016EN"
      "UM_VALUE2878\020\031\022\022\n\016ENUM_VALUE2879\020\032\022\022\n\016EN"
      "UM_VALUE2880\020\033\022\022\n\016ENUM_VALUE2881\020\034\022\022\n\016EN"
      "UM_VALUE2882\020\035\022\022\n\016ENUM_VALUE2883\020\036\022\022\n\016EN"
      "UM_VALUE2884\020\037\022\022\n\016ENUM_VALUE2885\020 \022\022\n\016EN"
      "UM_VALUE2886\020!\022\022\n\016ENUM_VALUE2887\020\"\022\022\n\016EN"
      "UM_VALUE2888\020#\022\022\n\016ENUM_VALUE2889\020$\022\022\n\016EN"
      "UM_VALUE2890\020%\022\022\n\016ENUM_VALUE2891\020&\022\022\n\016EN"
      "UM_VALUE2892\020\'\022\022\n\016ENUM_VALUE2893\020(\022\022\n\016EN"
      "UM_VALUE2894\020)\022\022\n\016ENUM_VALUE2895\020*\022\022\n\016EN"
      "UM_VALUE2896\020+\022\022\n\016ENUM_VALUE2897\020,\022\022\n\016EN"
      "UM_VALUE2898\020-\022\022\n\016ENUM_VALUE2899\020.\022\022\n\016EN"
      "UM_VALUE2900\020/\022\022\n\016ENUM_VALUE2901\0200\022\022\n\016EN"
      "UM_VALUE2902\0201\022\022\n\016ENUM_VALUE2903\0202\022\022\n\016EN"
      "UM_VALUE2904\0203\022\022\n\016ENUM_VALUE2905\0204\022\022\n\016EN"
      "UM_VALUE2906\0205\022\022\n\016ENUM_VALUE2907\0206\022\022\n\016EN"
      "UM_VALUE2908\0207\022\022\n\016ENUM_VALUE2909\0208\022\022\n\016EN"
      "UM_VALUE2910\0209\022\022\n\016ENUM_VALUE2911\020:\022\022\n\016EN"
      "UM_VALUE2912\020;\022\022\n\016ENUM_VALUE2913\020<\022\022\n\016EN"
      "UM_VALUE2914\020=\022\022\n\016ENUM_VALUE2915\020>\022\022\n\016EN"
      "UM_VALUE2916\020\?\022\022\n\016ENUM_VALUE2917\020@\022\022\n\016EN"
      "UM_VALUE2918\020A\022\022\n\016ENUM_VALUE2919\020B\022\022\n\016EN"
      "UM_VALUE2920\020C\022\022\n\016ENUM_VALUE2921\020D\022\022\n\016EN"
      "UM_VALUE2922\020E\022\022\n\016ENUM_VALUE2923\020F\022\022\n\016EN"
      "UM_VALUE2924\020G\022\022\n\016ENUM_VALUE2925\020H\022\022\n\016EN"
      "UM_VALUE2926\020I\022\022\n\016ENUM_VALUE2927\020J\022\022\n\016EN"
      "UM_VALUE2928\020K\022\022\n\016ENUM_VALUE2929\020L\022\022\n\016EN"
      "UM_VALUE2930\020M\022\022\n\016ENUM_VALUE2931\020N\022\022\n\016EN"
      "UM_VALUE2932\020O\022\022\n\016ENUM_VALUE2933\020P\022\022\n\016EN"
      "UM_VALUE2934\020Q\022\022\n\016ENUM_VALUE2935\020R\022\022\n\016EN"
      "UM_VALUE2936\020S\022\022\n\016ENUM_VALUE2937\020T\022\022\n\016EN"
      "UM_VALUE2938\020U\022\022\n\016ENUM_VALUE2939\020V\022\022\n\016EN"
      "UM_VALUE2940\020W\022\022\n\016ENUM_VALUE2941\020X\022\022\n\016EN"
      "UM_VALUE2942\020Y\022\022\n\016ENUM_VALUE2943\020Z\022\022\n\016EN"
      "UM_VALUE2944\020[\022\022\n\016ENUM_VALUE2945\020\\\022\022\n\016EN"
      "UM_VALUE2946\020]\022\022\n\016ENUM_VALUE2947\020^\022\022\n\016EN"
      "UM_VALUE2948\020_\022\022\n\016ENUM_VALUE2949\020`\022\022\n\016EN"
      "UM_VALUE2950\020a\022\022\n\016ENUM_VALUE2951\020b\022\022\n\016EN"
      "UM_VALUE2952\020c\022\022\n\016ENUM_VALUE2953\020d\022\022\n\016EN"
      "UM_VALUE2954\020e\022\022\n\016ENUM_VALUE2955\020f\022\022\n\016EN"
      "UM_VALUE2956\020g\022\022\n\016ENUM_VALUE2957\020h\022\022\n\016EN"
      "UM_VALUE2958\020i\022\022\n\016ENUM_VALUE2959\020j\022\022\n\016EN"
      "UM_VALUE2960\020k\022\022\n\016ENUM_VALUE2961\020l\022\022\n\016EN"
      "UM_VALUE2962\020m\022\022\n\016ENUM_VALUE2963\020n\022\022\n\016EN"
      "UM_VALUE2964\020o\022\022\n\016ENUM_VALUE2965\020p\022\022\n\016EN"
      "UM_VALUE2966\020q\022\022\n\016ENUM_VALUE2967\020r\022\022\n\016EN"
      "UM_VALUE2968\020s\022\022\n\016ENUM_VALUE2969\020t\022\022\n\016EN"
      "UM_VALUE2970\020u\022\022\n\016ENUM_VALUE2971\020v\022\022\n\016EN"
      "UM_VALUE2972\020w\032\002\020\001*\372\001\n\010Enum2602\022\022\n\016ENUM_"
      "VALUE2603\020\000\022\022\n\016ENUM_VALUE2604\020\001\022\022\n\016ENUM_"
      "VALUE2605\020\002\022\022\n\016ENUM_VALUE2606\020\003\022\022\n\016ENUM_"
      "VALUE2607\020\004\022\022\n\016ENUM_VALUE2608\020\005\022\022\n\016ENUM_"
      "VALUE2609\020\006\022\022\n\016ENUM_VALUE2610\020\007\022\022\n\016ENUM_"
      "VALUE2611\020\010\022\022\n\016ENUM_VALUE2612\020\t\022\022\n\016ENUM_"
      "VALUE2613\020\n\022\022\n\016ENUM_VALUE2614\020\013*\272\004\n\010Enum"
      "3071\022\022\n\016ENUM_VALUE3072\020\001\022\022\n\016ENUM_VALUE30"
      "73\020\002\022\022\n\016ENUM_VALUE3074\020\003\022\022\n\016ENUM_VALUE30"
      "75\020\004\022\022\n\016ENUM_VALUE3076\020\005\022\022\n\016ENUM_VALUE30"
      "77\020\006\022\022\n\016ENUM_VALUE3078\020\007\022\022\n\016ENUM_VALUE30"
      "79\020\010\022\022\n\016ENUM_VALUE3080\020\t\022\022\n\016ENUM_VALUE30"
      "81\020\n\022\022\n\016ENUM_VALUE3082\020\013\022\022\n\016ENUM_VALUE30"
      "83\020\014\022\022\n\016ENUM_VALUE3084\020\r\022\022\n\016ENUM_VALUE30"
      "85\020\016\022\022\n\016ENUM_VALUE3086\020\017\022\022\n\016ENUM_VALUE30"
      "87\020\020\022\022\n\016ENUM_VALUE3088\020\021\022\022\n\016ENUM_VALUE30"
      "89\020\022\022\022\n\016ENUM_VALUE3090\020\023\022\022\n\016ENUM_VALUE30"
      "91\020\024\022\022\n\016ENUM_VALUE3092\020\025\022\022\n\016ENUM_VALUE30"
      "93\020\026\022\022\n\016ENUM_VALUE3094\020\027\022\022\n\016ENUM_VALUE30"
      "95\020\030\022\022\n\016ENUM_VALUE3096\020\031\022\022\n\016ENUM_VALUE30"
      "97\020\032\022\022\n\016ENUM_VALUE3098\020\033\022\022\n\016ENUM_VALUE30"
      "99\020\034*\372\001\n\010Enum3805\022\022\n\016ENUM_VALUE3806\020\000\022\022\n"
      "\016ENUM_VALUE3807\020\001\022\022\n\016ENUM_VALUE3808\020\002\022\022\n"
      "\016ENUM_VALUE3809\020\003\022\022\n\016ENUM_VALUE3810\020\004\022\022\n"
      "\016ENUM_VALUE3811\020\005\022\022\n\016ENUM_VALUE3812\020\006\022\022\n"
      "\016ENUM_VALUE3813\020\007\022\022\n\016ENUM_VALUE3814\020\010\022\022\n"
      "\016ENUM_VALUE3815\020\t\022\022\n\016ENUM_VALUE3816\020\013\022\022\n"
      "\016ENUM_VALUE3817\020\n*\232\003\n\010Enum3783\022\022\n\016ENUM_V"
      "ALUE3784\020\000\022\022\n\016ENUM_VALUE3785\020\001\022\022\n\016ENUM_V"
      "ALUE3786\020\002\022\022\n\016ENUM_VALUE3787\020\003\022\022\n\016ENUM_V"
      "ALUE3788\020\004\022\022\n\016ENUM_VALUE3789\020\005\022\022\n\016ENUM_V"
      "ALUE3790\020\006\022\022\n\016ENUM_VALUE3791\020\007\022\022\n\016ENUM_V"
      "ALUE3792\020\010\022\022\n\016ENUM_VALUE3793\020\t\022\022\n\016ENUM_V"
      "ALUE3794\020\n\022\022\n\016ENUM_VALUE3795\020\013\022\022\n\016ENUM_V"
      "ALUE3796\020\014\022\022\n\016ENUM_VALUE3797\020\r\022\022\n\016ENUM_V"
      "ALUE3798\020\016\022\022\n\016ENUM_VALUE3799\020\017\022\022\n\016ENUM_V"
      "ALUE3800\020\020\022\022\n\016ENUM_VALUE3801\020\024\022\022\n\016ENUM_V"
      "ALUE3802\020\025\022\022\n\016ENUM_VALUE3803\0202*\362\002\n\010Enum3"
      "851\022\022\n\016ENUM_VALUE3852\020\000\022\022\n\016ENUM_VALUE385"
      "3\020\001\022\022\n\016ENUM_VALUE3854\020\002\022\022\n\016ENUM_VALUE385"
      "5\020\003\022\022\n\016ENUM_VALUE3856\020\004\022\022\n\016ENUM_VALUE385"
      "7\020\005\022\022\n\016ENUM_VALUE3858\020\006\022\022\n\016ENUM_VALUE385"
      "9\020\007\022\022\n\016ENUM_VALUE3860\020\010\022\022\n\016ENUM_VALUE386"
      "1\020\t\022\022\n\016ENUM_VALUE3862\020\n\022\022\n\016ENUM_VALUE386"
      "3\020\013\022\022\n\016ENUM_VALUE3864\020\014\022\022\n\016ENUM_VALUE386"
      "5\020\r\022\022\n\016ENUM_VALUE3866\020\016\022\022\n\016ENUM_VALUE386"
      "7\020\017\022\022\n\016ENUM_VALUE3868\020\020\022\022\n\016ENUM_VALUE386"
      "9\020\021*F\n\010Enum5862\022\022\n\016ENUM_VALUE5863\020\001\022\022\n\016E"
      "NUM_VALUE5864\020\002\022\022\n\016ENUM_VALUE5865\020\003*Z\n\010E"
      "num5868\022\022\n\016ENUM_VALUE5869\020\000\022\022\n\016ENUM_VALU"
      "E5870\020\001\022\022\n\016ENUM_VALUE5871\020\002\022\022\n\016ENUM_VALU"
      "E5872\020\003*F\n\010Enum5873\022\022\n\016ENUM_VALUE5874\020\000\022"
      "\022\n\016ENUM_VALUE5875\020\001\022\022\n\016ENUM_VALUE5876\020\002*"
      "2\n\010Enum5904\022\022\n\016ENUM_VALUE5905\020\000\022\022\n\016ENUM_"
      "VALUE5906\020\001*2\n\010Enum5909\022\022\n\016ENUM_VALUE591"
      "0\020\000\022\022\n\016ENUM_VALUE5911\020\001*2\n\010Enum5912\022\022\n\016E"
      "NUM_VALUE5913\020\000\022\022\n\016ENUM_VALUE5914\020\001*Z\n\010E"
      "num5915\022\022\n\016ENUM_VALUE5916\020\000\022\022\n\016ENUM_VALU"
      "E5917\020\001\022\022\n\016ENUM_VALUE5918\020\002\022\022\n\016ENUM_VALU"
      "E5919\020\003*2\n\010Enum5920\022\022\n\016ENUM_VALUE5921\020\000\022"
      "\022\n\016ENUM_VALUE5922\020\001*Z\n\010Enum5923\022\022\n\016ENUM_"
      "VALUE5924\020\000\022\022\n\016ENUM_VALUE5925\020\001\022\022\n\016ENUM_"
      "VALUE5926\020\002\022\022\n\016ENUM_VALUE5927\020\003*2\n\010Enum5"
      "928\022\022\n\016ENUM_VALUE5929\020\000\022\022\n\016ENUM_VALUE593"
      "0\020\001*F\n\010Enum5931\022\022\n\016ENUM_VALUE5932\020\000\022\022\n\016E"
      "NUM_VALUE5933\020\001\022\022\n\016ENUM_VALUE5934\020\002*F\n\010E"
      "num5935\022\022\n\016ENUM_VALUE5936\020\000\022\022\n\016ENUM_VALU"
      "E5937\020\001\022\022\n\016ENUM_VALUE5938\020\002*\202\001\n\010Enum5939"
      "\022\022\n\016ENUM_VALUE5940\020\000\022\022\n\016ENUM_VALUE5941\020\001"
      "\022\022\n\016ENUM_VALUE5942\020\002\022\022\n\016ENUM_VALUE5943\020\003"
      "\022\022\n\016ENUM_VALUE5944\020\004\022\022\n\016ENUM_VALUE5945\020\005"
      "*\322\001\n\010Enum5946\022\022\n\016ENUM_VALUE5947\020\000\022\022\n\016ENU"
      "M_VALUE5948\020\001\022\022\n\016ENUM_VALUE5949\020\002\022\022\n\016ENU"
      "M_VALUE5950\020\003\022\022\n\016ENUM_VALUE5951\020\004\022\022\n\016ENU"
      "M_VALUE5952\020\005\022\022\n\016ENUM_VALUE5953\020\006\022\022\n\016ENU"
      "M_VALUE5954\020\007\022\022\n\016ENUM_VALUE5955\020\010\022\022\n\016ENU"
      "M_VALUE5956\020\t*Z\n\010Enum5957\022\022\n\016ENUM_VALUE5"
      "958\020\000\022\022\n\016ENUM_VALUE5959\020\001\022\022\n\016ENUM_VALUE5"
      "960\020\002\022\022\n\016ENUM_VALUE5961\020\003*2\n\010Enum5962\022\022\n"
      "\016ENUM_VALUE5963\020\000\022\022\n\016ENUM_VALUE5964\020\001*\302\003"
      "\n\010Enum6025\022\022\n\016ENUM_VALUE6026\020\000\022\022\n\016ENUM_V"
      "ALUE6027\020\001\022\022\n\016ENUM_VALUE6028\020\002\022\022\n\016ENUM_V"
      "ALUE6029\020\003\022\022\n\016ENUM_VALUE6030\020\004\022\022\n\016ENUM_V"
      "ALUE6031\020\005\022\022\n\016ENUM_VALUE6032\020\006\022\022\n\016ENUM_V"
      "ALUE6033\020\007\022\022\n\016ENUM_VALUE6034\020\010\022\022\n\016ENUM_V"
      "ALUE6035\020\t\022\022\n\016ENUM_VALUE6036\020\n\022\022\n\016ENUM_V"
      "ALUE6037\020\013\022\022\n\016ENUM_VALUE6038\020\014\022\022\n\016ENUM_V"
      "ALUE6039\020\r\022\022\n\016ENUM_VALUE6040\020\016\022\022\n\016ENUM_V"
      "ALUE6041\020\017\022\022\n\016ENUM_VALUE6042\020\020\022\022\n\016ENUM_V"
      "ALUE6043\020\021\022\022\n\016ENUM_VALUE6044\020\022\022\022\n\016ENUM_V"
      "ALUE6045\020\023\022\022\n\016ENUM_VALUE6046\020\024\022\022\n\016ENUM_V"
      "ALUE6047\020\025*\242\002\n\010Enum6111\022\022\n\016ENUM_VALUE611"
      "2\020\001\022\022\n\016ENUM_VALUE6113\020\002\022\022\n\016ENUM_VALUE611"
      "4\020\003\022\022\n\016ENUM_VALUE6115\020\004\022\022\n\016ENUM_VALUE611"
      "6\020\005\022\022\n\016ENUM_VALUE6117\020\006\022\022\n\016ENUM_VALUE611"
      "8\020\007\022\022\n\016ENUM_VALUE6119\020\010\022\022\n\016ENUM_VALUE612"
      "0\020\t\022\022\n\016ENUM_VALUE6121\020\n\022\022\n\016ENUM_VALUE612"
      "2\020\013\022\022\n\016ENUM_VALUE6123\020\014\022\022\n\016ENUM_VALUE612"
      "4\020\r\022\022\n\016ENUM_VALUE6125\020\016*\266\002\n\010Enum6065\022\022\n\016"
      "ENUM_VALUE6066\020\000\022\022\n\016ENUM_VALUE6067\020\001\022\022\n\016"
      "ENUM_VALUE6068\020\002\022\022\n\016ENUM_VALUE6069\020\003\022\022\n\016"
      "ENUM_VALUE6070\020\004\022\022\n\016ENUM_VALUE6071\020\005\022\022\n\016"
      "ENUM_VALUE6072\020\006\022\022\n\016ENUM_VALUE6073\020\007\022\022\n\016"
      "ENUM_VALUE6074\020\010\022\022\n\016ENUM_VALUE6075\020\t\022\022\n\016"
      "ENUM_VALUE6076\020\n\022\022\n\016ENUM_VALUE6077\020\013\022\022\n\016"
      "ENUM_VALUE6078\020\014\022\022\n\016ENUM_VALUE6079\020\r\022\022\n\016"
      "ENUM_VALUE6080\020\016*2\n\010Enum6130\022\022\n\016ENUM_VAL"
      "UE6131\020\000\022\022\n\016ENUM_VALUE6132\020\001*\252\001\n\010Enum657"
      "9\022\022\n\016ENUM_VALUE6580\020\000\022\022\n\016ENUM_VALUE6581\020"
      "\002\022\022\n\016ENUM_VALUE6582\020\003\022\022\n\016ENUM_VALUE6583\020"
      "\005\022\022\n\016ENUM_VALUE6584\020\n\022\022\n\016ENUM_VALUE6585\020"
      "\017\022\022\n\016ENUM_VALUE6586\020\031\022\022\n\016ENUM_VALUE6587\020"
      "\036*\262\005\n\010Enum6588\022\022\n\016ENUM_VALUE6589\020\000\022\022\n\016EN"
      "UM_VALUE6590\020\001\022\022\n\016ENUM_VALUE6591\020\002\022\022\n\016EN"
      "UM_VALUE6592\020\003\022\022\n\016ENUM_VALUE6593\020\004\022\022\n\016EN"
      "UM_VALUE6594\020\005\022\022\n\016ENUM_VALUE6595\020\006\022\022\n\016EN"
      "UM_VALUE6596\020\007\022\022\n\016ENUM_VALUE6597\020\010\022\022\n\016EN"
      "UM_VALUE6598\020\t\022\022\n\016ENUM_VALUE6599\020\n\022\022\n\016EN"
      "UM_VALUE6600\020\013\022\022\n\016ENUM_VALUE6601\020\014\022\022\n\016EN"
      "UM_VALUE6602\020\r\022\022\n\016ENUM_VALUE6603\020\016\022\022\n\016EN"
      "UM_VALUE6604\020\017\022\022\n\016ENUM_VALUE6605\020\020\022\022\n\016EN"
      "UM_VALUE6606\020\021\022\022\n\016ENUM_VALUE6607\020\023\022\022\n\016EN"
      "UM_VALUE6608\020\024\022\022\n\016ENUM_VALUE6609\020\025\022\022\n\016EN"
      "UM_VALUE6610\020\026\022\022\n\016ENUM_VALUE6611\020\027\022\022\n\016EN"
      "UM_VALUE6612\020\030\022\022\n\016ENUM_VALUE6613\020\031\022\022\n\016EN"
      "UM_VALUE6614\020\032\022\022\n\016ENUM_VALUE6615\020\033\022\022\n\016EN"
      "UM_VALUE6616\020\034\022\022\n\016ENUM_VALUE6617\020\035\022\022\n\016EN"
      "UM_VALUE6618\020\036\022\022\n\016ENUM_VALUE6619\020\037\022\022\n\016EN"
      "UM_VALUE6620\020 \022\022\n\016ENUM_VALUE6621\020!\022\022\n\016EN"
      "UM_VALUE6622\020\"*Z\n\010Enum7288\022\022\n\016ENUM_VALUE"
      "7289\020\000\022\022\n\016ENUM_VALUE7290\020\001\022\022\n\016ENUM_VALUE"
      "7291\020\002\022\022\n\016ENUM_VALUE7292\020\003*\252\001\n\010Enum7512\022"
      "\022\n\016ENUM_VALUE7513\020\000\022\022\n\016ENUM_VALUE7514\020\001\022"
      "\022\n\016ENUM_VALUE7515\020\002\022\022\n\016ENUM_VALUE7516\020\003\022"
      "\022\n\016ENUM_VALUE7517\020\004\022\022\n\016ENUM_VALUE7518\020\005\022"
      "\022\n\016ENUM_VALUE7519\020\006\022\022\n\016ENUM_VALUE7520\020\007*"
      "n\n\010Enum7922\022\022\n\016ENUM_VALUE7923\020\001\022\022\n\016ENUM_"
      "VALUE7924\020\002\022\022\n\016ENUM_VALUE7925\020\003\022\022\n\016ENUM_"
      "VALUE7926\020\004\022\022\n\016ENUM_VALUE7927\020\005*\242\035\n\010Enum"
      "3476\022\022\n\016ENUM_VALUE3477\020\000\022\022\n\016ENUM_VALUE34"
      "78\020\001\022\022\n\016ENUM_VALUE3479\020\002\022\022\n\016ENUM_VALUE34"
      "80\020\003\022\022\n\016ENUM_VALUE3481\020\004\022\022\n\016ENUM_VALUE34"
      "82\020\005\022\022\n\016ENUM_VALUE3483\020\006\022\022\n\016ENUM_VALUE34"
      "84\020\007\022\022\n\016ENUM_VALUE3485\020\010\022\022\n\016ENUM_VALUE34"
      "86\020\t\022\022\n\016ENUM_VALUE3487\020\n\022\022\n\016ENUM_VALUE34"
      "88\020\013\022\022\n\016ENUM_VALUE3489\020\014\022\022\n\016ENUM_VALUE34"
      "90\020\r\022\022\n\016ENUM_VALUE3491\020\016\022\022\n\016ENUM_VALUE34"
      "92\020\017\022\022\n\016ENUM_VALUE3493\020\020\022\022\n\016ENUM_VALUE34"
      "94\020\021\022\022\n\016ENUM_VALUE3495\020\022\022\022\n\016ENUM_VALUE34"
      "96\020\023\022\022\n\016ENUM_VALUE3497\020\024\022\022\n\016ENUM_VALUE34"
      "98\020\025\022\022\n\016ENUM_VALUE3499\020\026\022\022\n\016ENUM_VALUE35"
      "00\020\027\022\022\n\016ENUM_VALUE3501\020\030\022\022\n\016ENUM_VALUE35"
      "02\020\031\022\022\n\016ENUM_VALUE3503\020\032\022\022\n\016ENUM_VALUE35"
      "04\020\033\022\022\n\016ENUM_VALUE3505\020\034\022\022\n\016ENUM_VALUE35"
      "06\020\035\022\022\n\016ENUM_VALUE3507\020\036\022\022\n\016ENUM_VALUE35"
      "08\020\037\022\022\n\016ENUM_VALUE3509\020 \022\022\n\016ENUM_VALUE35"
      "10\020!\022\022\n\016ENUM_VALUE3511\020\"\022\022\n\016ENUM_VALUE35"
      "12\020#\022\022\n\016ENUM_VALUE3513\020$\022\022\n\016ENUM_VALUE35"
      "14\020%\022\022\n\016ENUM_VALUE3515\020&\022\022\n\016ENUM_VALUE35"
      "16\020\'\022\022\n\016ENUM_VALUE3517\020(\022\022\n\016ENUM_VALUE35"
      "18\020)\022\022\n\016ENUM_VALUE3519\020*\022\022\n\016ENUM_VALUE35"
      "20\020+\022\022\n\016ENUM_VALUE3521\020,\022\022\n\016ENUM_VALUE35"
      "22\020-\022\022\n\016ENUM_VALUE3523\020.\022\022\n\016ENUM_VALUE35"
      "24\020/\022\022\n\016ENUM_VALUE3525\0200\022\022\n\016ENUM_VALUE35"
      "26\0201\022\022\n\016ENUM_VALUE3527\0202\022\022\n\016ENUM_VALUE35"
      "28\0203\022\022\n\016ENUM_VALUE3529\0204\022\022\n\016ENUM_VALUE35"
      "30\0205\022\022\n\016ENUM_VALUE3531\0206\022\022\n\016ENUM_VALUE35"
      "32\0207\022\022\n\016ENUM_VALUE3533\0208\022\022\n\016ENUM_VALUE35"
      "34\0209\022\022\n\016ENUM_VALUE3535\020:\022\022\n\016ENUM_VALUE35"
      "36\020;\022\022\n\016ENUM_VALUE3537\020<\022\022\n\016ENUM_VALUE35"
      "38\020=\022\022\n\016ENUM_VALUE3539\020>\022\022\n\016ENUM_VALUE35"
      "40\020\?\022\022\n\016ENUM_VALUE3541\020@\022\022\n\016ENUM_VALUE35"
      "42\020A\022\022\n\016ENUM_VALUE3543\020B\022\022\n\016ENUM_VALUE35"
      "44\020C\022\022\n\016ENUM_VALUE3545\020D\022\022\n\016ENUM_VALUE35"
      "46\020E\022\022\n\016ENUM_VALUE3547\020F\022\022\n\016ENUM_VALUE35"
      "48\020G\022\022\n\016ENUM_VALUE3549\020H\022\022\n\016ENUM_VALUE35"
      "50\020I\022\022\n\016ENUM_VALUE3551\020J\022\022\n\016ENUM_VALUE35"
      "52\020K\022\022\n\016ENUM_VALUE3553\020L\022\022\n\016ENUM_VALUE35"
      "54\020M\022\022\n\016ENUM_VALUE3555\020N\022\022\n\016ENUM_VALUE35"
      "56\020O\022\022\n\016ENUM_VALUE3557\020P\022\022\n\016ENUM_VALUE35"
      "58\020Q\022\022\n\016ENUM_VALUE3559\020R\022\022\n\016ENUM_VALUE35"
      "60\020S\022\022\n\016ENUM_VALUE3561\020T\022\022\n\016ENUM_VALUE35"
      "62\020U\022\022\n\016ENUM_VALUE3563\020V\022\022\n\016ENUM_VALUE35"
      "64\020W\022\022\n\016ENUM_VALUE3565\020X\022\022\n\016ENUM_VALUE35"
      "66\020Y\022\022\n\016ENUM_VALUE3567\020Z\022\022\n\016ENUM_VALUE35"
      "68\020[\022\022\n\016ENUM_VALUE3569\020\\\022\022\n\016ENUM_VALUE35"
      "70\020]\022\022\n\016ENUM_VALUE3571\020^\022\022\n\016ENUM_VALUE35"
      "72\020_\022\022\n\016ENUM_VALUE3573\020`\022\022\n\016ENUM_VALUE35"
      "74\020a\022\022\n\016ENUM_VALUE3575\020b\022\022\n\016ENUM_VALUE35"
      "76\020c\022\022\n\016ENUM_VALUE3577\020d\022\022\n\016ENUM_VALUE35"
      "78\020e\022\022\n\016ENUM_VALUE3579\020f\022\022\n\016ENUM_VALUE35"
      "80\020g\022\022\n\016ENUM_VALUE3581\020h\022\022\n\016ENUM_VALUE35"
      "82\020i\022\022\n\016ENUM_VALUE3583\020j\022\022\n\016ENUM_VALUE35"
      "84\020k\022\022\n\016ENUM_VALUE3585\020l\022\022\n\016ENUM_VALUE35"
      "86\020m\022\022\n\016ENUM_VALUE3587\020n\022\022\n\016ENUM_VALUE35"
      "88\020o\022\022\n\016ENUM_VALUE3589\020p\022\022\n\016ENUM_VALUE35"
      "90\020q\022\022\n\016ENUM_VALUE3591\020r\022\022\n\016ENUM_VALUE35"
      "92\020s\022\022\n\016ENUM_VALUE3593\020t\022\022\n\016ENUM_VALUE35"
      "94\020u\022\022\n\016ENUM_VALUE3595\020v\022\022\n\016ENUM_VALUE35"
      "96\020w\022\022\n\016ENUM_VALUE3597\020x\022\022\n\016ENUM_VALUE35"
      "98\020y\022\022\n\016ENUM_VALUE3599\020z\022\022\n\016ENUM_VALUE36"
      "00\020{\022\022\n\016ENUM_VALUE3601\020|\022\022\n\016ENUM_VALUE36"
      "02\020}\022\022\n\016ENUM_VALUE3603\020~\022\022\n\016ENUM_VALUE36"
      "04\020\177\022\023\n\016ENUM_VALUE3605\020\200\001\022\023\n\016ENUM_VALUE3"
      "606\020\201\001\022\023\n\016ENUM_VALUE3607\020\202\001\022\023\n\016ENUM_VALU"
      "E3608\020\203\001\022\023\n\016ENUM_VALUE3609\020\204\001\022\023\n\016ENUM_VA"
      "LUE3610\020\205\001\022\023\n\016ENUM_VALUE3611\020\206\001\022\023\n\016ENUM_"
      "VALUE3612\020\207\001\022\023\n\016ENUM_VALUE3613\020\210\001\022\023\n\016ENU"
      "M_VALUE3614\020\211\001\022\023\n\016ENUM_VALUE3615\020\212\001\022\023\n\016E"
      "NUM_VALUE3616\020\213\001\022\023\n\016ENUM_VALUE3617\020\214\001\022\023\n"
      "\016ENUM_VALUE3618\020\215\001\022\023\n\016ENUM_VALUE3619\020\216\001\022"
      "\023\n\016ENUM_VALUE3620\020\217\001\022\023\n\016ENUM_VALUE3621\020\220"
      "\001\022\023\n\016ENUM_VALUE3622\020\221\001\022\023\n\016ENUM_VALUE3623"
      "\020\222\001\022\023\n\016ENUM_VALUE3624\020\223\001\022\023\n\016ENUM_VALUE36"
      "25\020\224\001\022\023\n\016ENUM_VALUE3626\020\225\001\022\023\n\016ENUM_VALUE"
      "3627\020\226\001\022\023\n\016ENUM_VALUE3628\020\227\001\022\023\n\016ENUM_VAL"
      "UE3629\020\230\001\022\023\n\016ENUM_VALUE3630\020\231\001\022\023\n\016ENUM_V"
      "ALUE3631\020\232\001\022\023\n\016ENUM_VALUE3632\020\233\001\022\023\n\016ENUM"
      "_VALUE3633\020\234\001\022\023\n\016ENUM_VALUE3634\020\235\001\022\023\n\016EN"
      "UM_VALUE3635\020\236\001\022\023\n\016ENUM_VALUE3636\020\237\001\022\023\n\016"
      "ENUM_VALUE3637\020\240\001\022\023\n\016ENUM_VALUE3638\020\241\001\022\023"
      "\n\016ENUM_VALUE3639\020\242\001\022\023\n\016ENUM_VALUE3640\020\243\001"
      "\022\023\n\016ENUM_VALUE3641\020\244\001\022\023\n\016ENUM_VALUE3642\020"
      "\245\001\022\023\n\016ENUM_VALUE3643\020\246\001\022\023\n\016ENUM_VALUE364"
      "4\020\247\001\022\023\n\016ENUM_VALUE3645\020\250\001\022\023\n\016ENUM_VALUE3"
      "646\020\251\001\022\023\n\016ENUM_VALUE3647\020\252\001\022\023\n\016ENUM_VALU"
      "E3648\020\253\001\022\023\n\016ENUM_VALUE3649\020\254\001\022\023\n\016ENUM_VA"
      "LUE3650\020\255\001\022\023\n\016ENUM_VALUE3651\020\256\001\022\023\n\016ENUM_"
      "VALUE3652\020\257\001\022\023\n\016ENUM_VALUE3653\020\260\001\022\023\n\016ENU"
      "M_VALUE3654\020\261\001\022\023\n\016ENUM_VALUE3655\020\262\001\022\023\n\016E"
      "NUM_VALUE3656\020\263\001\022\023\n\016ENUM_VALUE3657\020\264\001\022\023\n"
      "\016ENUM_VALUE3658\020\265\001\022\023\n\016ENUM_VALUE3659\020\266\001\022"
      "\023\n\016ENUM_VALUE3660\020\267\001*\310\001\n\tEnum10325\022\023\n\017EN"
      "UM_VALUE10326\020\000\022\023\n\017ENUM_VALUE10327\020\001\022\023\n\017"
      "ENUM_VALUE10328\020\002\022\023\n\017ENUM_VALUE10329\020\003\022\023"
      "\n\017ENUM_VALUE10330\020\004\022\023\n\017ENUM_VALUE10331\020\005"
      "\022\023\n\017ENUM_VALUE10332\020\006\022\023\n\017ENUM_VALUE10333"
      "\020\007\022\023\n\017ENUM_VALUE10334\020\010* \n\tEnum10335\022\023\n\017"
      "ENUM_VALUE10336\020\000*5\n\tEnum10337\022\023\n\017ENUM_V"
      "ALUE10338\020\000\022\023\n\017ENUM_VALUE10339\020\001*_\n\tEnum"
      "11901\022\023\n\017ENUM_VALUE11902\020\000\022\023\n\017ENUM_VALUE"
      "11903\020\001\022\023\n\017ENUM_VALUE11904\020\002\022\023\n\017ENUM_VAL"
      "UE11905\020\003*_\n\tEnum12735\022\023\n\017ENUM_VALUE1273"
      "6\020\000\022\023\n\017ENUM_VALUE12737\020\001\022\023\n\017ENUM_VALUE12"
      "738\020\002\022\023\n\017ENUM_VALUE12739\020\003*\211\001\n\tEnum12871"
      "\022\023\n\017ENUM_VALUE12872\020\001\022\023\n\017ENUM_VALUE12873"
      "\020\002\022\023\n\017ENUM_VALUE12874\020\003\022\023\n\017ENUM_VALUE128"
      "75\020\004\022\023\n\017ENUM_VALUE12876\020\005\022\023\n\017ENUM_VALUE1"
      "2877\020\006B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 13051);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datasets/google_message4/benchmark_message4_3.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto
namespace benchmarks {
namespace google_message4 {
const ::google::protobuf::EnumDescriptor* UnusedEnum_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[0];
}
bool UnusedEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum2593_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[1];
}
bool Enum2593_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum2834_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[2];
}
bool Enum2834_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum2806_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[3];
}
bool Enum2806_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum2851_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[4];
}
bool Enum2851_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum2602_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[5];
}
bool Enum2602_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum3071_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[6];
}
bool Enum3071_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum3805_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[7];
}
bool Enum3805_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum3783_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[8];
}
bool Enum3783_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 20:
    case 21:
    case 50:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum3851_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[9];
}
bool Enum3851_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5862_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[10];
}
bool Enum5862_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5868_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[11];
}
bool Enum5868_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5873_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[12];
}
bool Enum5873_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5904_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[13];
}
bool Enum5904_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5909_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[14];
}
bool Enum5909_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5912_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[15];
}
bool Enum5912_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5915_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[16];
}
bool Enum5915_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5920_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[17];
}
bool Enum5920_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5923_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[18];
}
bool Enum5923_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5928_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[19];
}
bool Enum5928_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5931_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[20];
}
bool Enum5931_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5935_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[21];
}
bool Enum5935_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5939_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[22];
}
bool Enum5939_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5946_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[23];
}
bool Enum5946_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5957_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[24];
}
bool Enum5957_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum5962_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[25];
}
bool Enum5962_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum6025_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[26];
}
bool Enum6025_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum6111_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[27];
}
bool Enum6111_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum6065_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[28];
}
bool Enum6065_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum6130_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[29];
}
bool Enum6130_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum6579_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[30];
}
bool Enum6579_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 5:
    case 10:
    case 15:
    case 25:
    case 30:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum6588_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[31];
}
bool Enum6588_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum7288_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[32];
}
bool Enum7288_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum7512_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[33];
}
bool Enum7512_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum7922_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[34];
}
bool Enum7922_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum3476_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[35];
}
bool Enum3476_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum10325_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[36];
}
bool Enum10325_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum10335_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[37];
}
bool Enum10335_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum10337_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[38];
}
bool Enum10337_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum11901_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[39];
}
bool Enum11901_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum12735_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[40];
}
bool Enum12735_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Enum12871_descriptor() {
  protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datasets_2fgoogle_5fmessage4_2fbenchmark_5fmessage4_5f3_2eproto::file_level_enum_descriptors[41];
}
bool Enum12871_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace google_message4
}  // namespace benchmarks
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
